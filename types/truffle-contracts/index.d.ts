/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />
import { BigNumber } from "bignumber.js";

export interface DeadManSwitchContract
  extends Truffle.Contract<DeadManSwitchInstance> {
  "new"(
    _deathBlockDiff: number | BigNumber | string,
    _beneficiaryAccount: string | BigNumber,
    meta?: Truffle.TransactionDetails
  ): Promise<DeadManSwitchInstance>;
}

export interface DeadManSwitchInstance extends Truffle.ContractInstance {
  beneficiaryAccount(txDetails?: Truffle.TransactionDetails): Promise<string>;

  deathBlockDiff(txDetails?: Truffle.TransactionDetails): Promise<BigNumber>;

  lastCheckBlock(txDetails?: Truffle.TransactionDetails): Promise<BigNumber>;

  ownerAccount(txDetails?: Truffle.TransactionDetails): Promise<string>;

  proveAlive: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  isDead(txDetails?: Truffle.TransactionDetails): Promise<boolean>;

  currentAmount(txDetails?: Truffle.TransactionDetails): Promise<BigNumber>;

  returnToOwner: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };

  claim: {
    (txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse
    >;
    call(txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(txDetails?: Truffle.TransactionDetails): Promise<string>;
    estimateGas(txDetails?: Truffle.TransactionDetails): Promise<number>;
  };
}
